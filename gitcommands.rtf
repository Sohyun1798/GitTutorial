- clone : Bring a repository that is hosted somewhere like github into a folder on your local machine
- add : track your files and changes in git
- commit : save your files in Git
- push : upload git commits to a remote repo to your local
- pull : download changes from remote repo
- status

git commit -m <message> -m <description>

<ssh>

ssh-keygen -t rsa -b 4096 -C "email@example.com"
ls | grep testkey

pub stands for public!

ex>
testkey -> private key
testkey.pub

pbcopy < ~/testkey.pub
github 에 ssh key 등록.

key 확인 > adding your ssh key to ~ page


<git push>

git push origin master
-> origin 위치의 master 브랜치에 push 하겠다

git push -u origin master
-> origin/master 를 default 로 사용하겠다
-> 이 담부터는 push 만 해도 됨.

git push --all origin master

<github workflow>
write code -> commit changes -> make a pull request

<local git workflow>
write code -> git add -> git commit -> git push -> make a pull request

<git branching>
master branch
feature branch -> make update => changes only seen in feature branch
hot fix branch

git branch
q -> quit
git checkout -> -b create new branch / or switch branch

git push --set-upstream origin feature-readme-instruction
-u : shortform of --set blah blah
= -u 쓰는 것과 같음.

git pull
git branch -d feature-readme-instruction
git commit -am => add+message

git merge master -> conflicts
git status 로 체크.
git commit -am "updated with master"

<undoing git>

git reset
커밋까지 다 해버렸을때 한 단계 뒤로 가기 -> git reset HEAD~1
git log -> commit 한 깃 다 보기. commit message 잘 쓰는 게 중요한 이유가,
돌아올때 편해야하니까.

dlfeksdustmq